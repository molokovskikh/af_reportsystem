import System
import System.Linq.Enumerable from System.Core
import System.IO
import System.ServiceProcess
import System.ComponentModel
import System.Security.Principal
import System.Runtime.InteropServices
import file from Deploy.bake
import file from Migration.bake
import file from Tools.bake
import file from Test.bake

Global(
	Project : "ReportSystem",
	ProjectBoot : "ReportSystemBoot",
	humanReadableName : "Генератор отчетов",
	Platform : "x86"
)

def Build(name as string):
	buildTo = Path.GetFullPath("build/ReportSystem/")
	projectFile = ".\\src\\${name}\\${name}.csproj"
	MkDir(buildTo) if not Exist(buildTo)
	MsBuild(projectFile,
			Target : "build",
			Parameters : { "OutDir" : buildTo,
				"Configuration" : "Release"},
			FrameworkVersion : "4.0.30319").Execute()
	Cp("./src/$name/app.release.config", "${buildTo}$name.exe.config", true)

def Clean(name as string):
	buildTo = Path.GetFullPath("build/ReportSystem/")
	projectFile = ".\\src\\${name}\\${name}.csproj"
	MsBuild(projectFile,
			Target : "clean",
			Parameters : { "OutDir" : buildTo,
						"Configuration" : "release" },
			FrameworkVersion : "4.0.30319").Execute()
	Rm("${buildTo}*", true) if Exist(buildTo)


host = "fms.adc.analit.net"
deployTo = "\\\\${host}\\Reports"
releaseTo = "\\\\${host}\\Reports\\ReleasePath"

task @default, [@build]

task @build, [@clean]:
	Build(Globals.ProjectBoot)
	Build(Globals.Project)

task @clean:
	Clean(Globals.ProjectBoot)
	Clean(Globals.Project)

# Отложенное обновление. Файлы обновляются, как только все отчеты отработают.
# Не обновляются: ReportSystemBoot, log4net и ProcessPrivileges (т.к. используются в ReportSystemBoot).
task @deploy, [@CheckScmChanges, @Backup, @Production, @Build, @Migrate, @SendDeployNotification]:
	buildTo = Path.GetFullPath("build/ReportSystem/")
	Cp(FileSet("*.*", BaseDirectory : buildTo), releaseTo, true)

# Обновление сразу, всех файлов. Нужно дождаться окончания работы всех процессов
task @forceDeploy, [@CheckScmChanges, @Backup, @Production, @Build, @Migrate, @SendDeployNotification]:
	buildTo = Path.GetFullPath("build/ReportSystem/")
	Cp(FileSet("*.*", BaseDirectory : buildTo), deployTo, true)
