import System
import System.Linq.Enumerable from System.Core
import System.IO
import System.ServiceProcess
import System.ComponentModel
import System.Security.Principal
import System.Runtime.InteropServices
import file from Deploy.bake
import file from Migration.bake
import file from Tools.bake

Global(
	Project : "ReportSystem",
	ProjectBoot : "ReportSystemBoot",
	humanReadableName : "Генератор отчетов"
)

buildTo = Path.GetFullPath("build/ReportSystem/")
projectFile = ".\\src\\${Globals.Project}\\${Globals.Project}.csproj"
projectBootFile = ".\\src\\${Globals.ProjectBoot}\\${Globals.ProjectBoot}.csproj"
host = "fms.adc.analit.net"
deployTo = "\\\\${host}\\Reports"
releaseTo = "\\\\${host}\\Reports\\ReleasePath"

Task @default, [@Build]

Task @Build, [@Clean]:
	MkDir(buildTo) if not Exist(buildTo)
	MsBuild(projectBootFile,
			Target : "build",
			Parameters : { "OutDir" : buildTo,
						   "Configuration" : "Release"},
			FrameworkVersion : "4.0.30319").Execute()
	MsBuild(projectFile,
			Target : "build",
			Parameters : { "OutDir" : buildTo,
						"Configuration" : "Release"},
			FrameworkVersion : "4.0.30319").Execute()
	Cp("./src/ReportSystem/app.release.config", "${buildTo}ReportSystem.exe.config", true)
	Cp("./src/ReportSystemBoot/app.release.config", "${buildTo}ReportSystemBoot.exe.config", true)

Task @Clean:
	MsBuild(projectBootFile,
			Target : "clean",
			Parameters : { "OutDir" : buildTo,
						"Configuration" : "release" },
			FrameworkVersion : "4.0.30319").Execute()
	MsBuild(projectFile,
			Target : "clean",
			Parameters : { "OutDir" : buildTo,
						"Configuration" : "release" },
			FrameworkVersion : "4.0.30319").Execute()
	Rm("${buildTo}*", true) if Exist(buildTo)

# Отложенное обновление. Файлы обновляются, как только все отчеты отработают.
# Не обновляются: ReportSystemBoot, log4net и ProcessPrivileges (т.к. используются в ReportSystemBoot).
Task @deploy, [@Backup, @Production, @Build, @Migrate, @SendDeployNotification]:
	Cp(FileSet("*.*", BaseDirectory : buildTo), releaseTo, true)

# Обновление сразу, всех файлов. Нужно дождаться окончания работы всех процессов
Task @forceDeploy, [@Backup, @Production, @Build, @Migrate, @SendDeployNotification]:
	Cp(FileSet("*.*", BaseDirectory : buildTo), deployTo, true)
