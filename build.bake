import System.IO
import System.Linq.Enumerable
import file from AppSupport.bake
import file from Migration.bake
import file from Test.bake
import file from Deploy.bake
import file from Db.bake
import file from MySql.bake

Global(
	HumanReadableName : "Генератор отчетов",
	Project : @ReportSystem,
	Profile : @reportTypes,
	SkipDefaultLib: true,
	AdditionalAssemblies: ("ReportTuner", "Common.Web.Ui", "Common.Models/Common.Schedule", "Report.Data.Builder")
)

host = "fms.adc.analit.net"
deployTo = "\\\\${host}\\Reports"
releaseTo = "\\\\${host}\\Reports\\ReleasePath"
project = "ReportSystem"
projectBoot = "ReportSystemBoot"

task @default, [@build]

task @build, ["build:web", "build:background", "build:exe"]

task @deploy, ["deploy:pipeline"]

task "deploy:app", ["deploy:web", "deploy:background", "deploy:exe"]

task @ready:
	unless Configuration.IsDefined(@notInteractive):
		Engine.Execute("LoadProject")

task "deploy:background", ["build:background"]:
	return if Globals.Environment != @Production

	project = "Report.Data.Builder"
	deploy = """\\fms\TopShelf\Services\""" + project
	XCopyDeploy(Globals, project, deploy)

task "deploy:exe":
	return if Globals.Environment != @Production

	XCopyDeploy(Globals, "ReportSystem", releaseTo)
	if Configuration.Maybe.force:
		XCopyDeploy(Globals, "ReportSystemBoot", deployTo)

task "deploy:web", ["build:web"]:
	XCopyDeploy(Globals, "ReportTuner")

task "build:web", ["clean:web"]:
	BuildWeb(Globals, "ReportTuner")

task "clean:web":
	CleanWeb(Globals, "ReportTuner")

task "build:background":
	Build(Globals, "Report.Data.Builder")

task "build:exe", ["clean:exe"]:
	Build(Globals, projectBoot)
	Build(Globals, project)

task "clean:exe":
	Clean(Globals, projectBoot)
	Clean(Globals, project)
