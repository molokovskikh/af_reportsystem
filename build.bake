import file from lib.bake
import System.IO
import file from Migration.bake

Global(
	humanReadableName : "Генератор отчетов"
)

task @default, ["exe:Build", "site:Build"]
task @deploy, ["exe:Deploy", "site:Deploy"]

group @exe:
	Global(
		project : "ReportSystem",
		projectBoot : "ReportSystemBoot"
	)

	buildTo = Path.GetFullPath("build/ReportSystem/")
	projectFile = ".\\src\\${Globals.project}\\${Globals.project}.csproj"
	projectBootFile = ".\\src\\${Globals.projectBoot}\\${Globals.projectBoot}.csproj"
	deployTo = """\\offdc.adc.analit.net\Reports\"""

	Task @Build, [@Clean]:
		MkDir(buildTo) if not Exist(buildTo)
		MsBuild(projectBootFile,
				Target : "build",
				Parameters : { "OutDir" : buildTo,
							   "Configuration" : "Release"},
				FrameworkVersion : "3.5").Execute()
		MsBuild(projectFile,
				Target : "build",
				Parameters : { "OutDir" : buildTo,
							   "Configuration" : "Release"},
				FrameworkVersion : "3.5").Execute()
		Cp("./src/ReportSystem/app.release.config", "${buildTo}ReportSystem.exe.config", true)
		Cp("./src/ReportSystemBoot/app.release.config", "${buildTo}ReportSystemBoot.exe.config", true)

	Task @Clean:
		MsBuild(projectBootFile,
				Target : "clean",
				Parameters : { "OutDir" : buildTo,
							   "Configuration" : "release" },
				FrameworkVersion : "3.5").Execute()
		MsBuild(projectFile,
				Target : "clean",
				Parameters : { "OutDir" : buildTo,
							   "Configuration" : "release" },
				FrameworkVersion : "3.5").Execute()
		Rm("${buildTo}*", true) if Exist(buildTo)
		
	Task @Deploy, [@Build, @Migrate, @SendDeployNotification]:
		Cp(FileSet("*.*", BaseDirectory : buildTo), deployTo, true)

group @site:
	Global(
		project : "ReportTuner",
		deployTo : """\\acdcserv.adc.analit.net\WebApps\Reports"""
	)

	Task @Build, [@buildWebSite]

	Task @Deploy, [@build, @Migrate, @deployWebSite, @SendDeployNotification]
