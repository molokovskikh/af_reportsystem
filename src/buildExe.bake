import file from common.bake
import System
import System.Linq.Enumerable from System.Core
import System.IO
import System.ServiceProcess
import System.ComponentModel
import System.Security.Principal
import System.Runtime.InteropServices


Global(
	project : "ReportSystem",
	projectBoot : "ReportSystemBoot"
)	
	
buildTo = Path.GetFullPath("..\\buildExe\\")
projectFile = ".\\${Globals.project}\\${Globals.project}.csproj"
projectBootFile = ".\\${Globals.projectBoot}\\${Globals.projectBoot}.csproj"
host = "offdc.adc.analit.net"
deployTo = "\\\\${host}\\Reports"

Task @default, [@Build]

Task @Build, [@Clean]:
	MkDir(buildTo) if not Exist(buildTo)
	MsBuild(projectBootFile,
			Target : "build",
			Parameters : { "OutDir" : buildTo,
						   "Configuration" : "Release"},
			FrameworkVersion : "3.5").Execute()
	MsBuild(projectFile,
			Target : "build",
			Parameters : { "OutDir" : buildTo,
						   "Configuration" : "Release"},
			FrameworkVersion : "3.5").Execute()
	Cp("./ReportSystem/app.release.config", "${buildTo}ReportSystem.exe.config", true)
	Cp("./ReportSystemBoot/app.release.config", "${buildTo}ReportSystemBoot.exe.config", true)
	
Task @Clean:
	MsBuild(projectBootFile,
			Target : "clean",
			Parameters : { "OutDir" : buildTo,
						   "Configuration" : "release" },
			FrameworkVersion : "3.5").Execute()
	MsBuild(projectFile,
			Target : "clean",
			Parameters : { "OutDir" : buildTo,
						   "Configuration" : "release" },
			FrameworkVersion : "3.5").Execute()
	Rm("${buildTo}*", true) if Exist(buildTo)
	
Task @deploy, [@Build]:
	Cp(FileSet("*.*", BaseDirectory : buildTo), deployTo, true)